
2015-07-06

This is how someone else decided to do it.
https://gist.github.com/stefanschmidt/923607



using exec() has unpredictable results

Using a non-current full episode has it return different formats for each act
Can probably be manuvered around.

rtmpe probably requires the swf file and the html page that embedded it.
Should try http whenever possible.


FFMPEG is stupid easy
http://stackoverflow.com/questions/15186500/howto-merge-two-avi-files-using-ffmpeg
http://stackoverflow.com/questions/7333232/concatenate-two-mp4-files-using-ffmpeg

This contains info on how to concatenate:
https://github.com/fluent-ffmpeg/node-fluent-ffmpeg

---
mergeToFile(filename, tmpdir): concatenate multiple inputs

Use the input and mergeToFile methods on a command to concatenate multiple inputs to a single output file. The mergeToFile needs a temporary folder as its second argument.

ffmpeg('/path/to/part1.avi')
  .input('/path/to/part2.avi')
  .input('/path/to/part2.avi')
  .on('error', function(err) {
    console.log('An error occurred: ' + err.message);
  })
  .on('end', function() {
    console.log('Merging finished !');
  })
  .mergeToFile('/path/to/merged.avi', '/path/to/tempDir');
---

I found this insanely helpful tutorial for getting ffprobe installed on osx via brew:
http://www.renevolution.com/how-to-install-ffmpeg-on-mac-os-x/

So, rebuilding with this:
brew install ffmpeg --with-fdk-aac --with-ffplay --with-freetype --with-frei0r --with-libass --with-libvo-aacenc --with-libvorbis --with-libvpx --with-opencore-amr --with-openjpeg --with-opus --with-rtmpdump --with-schroedinger --with-speex --with-theora --with-tools


---
Issue:
i don't think it's really concatentating, I think it's just completely re-encoding.
Which is bad.

Apparently, I have to be using the concat filter, but fluent ffmpeg doesn't support that:
https://github.com/fluent-ffmpeg/node-fluent-ffmpeg/issues/376

The proper and fast way to concat:
https://trac.ffmpeg.org/wiki/Concatenate

Yes!
This works: ffmpeg -f concat -i <(for f in ./*.wav; do echo "file '$PWD/$f'"; done) -c copy output.wav

It appears that this won't work unless this:
http://unix.stackexchange.com/questions/157541/parenthesis-works-in-bash-shell-itself-but-not-in-bash-script

So, maybe I shouldn't depend on extglobbing...

So, maybe can try:
ffmpeg -f concat -i <(find . -name '*.wav' -printf "file '$PWD/%p'\n") -c copy output.wav


That won't work, because subshell can't...
OK, but, maybe if I...


OK, I'm learning a ton.
Here's a good example:
sh -c "cat <(ls -l)"
OK, this sould work:
sh -c "ls -l | cat"

So, just refactor...

This works, assuming that it is invoked with sh -c ""
sh -c "for f in ./*.mp4; do echo \"file '$PWD/$f'\"; done"

With the important part being to print ' properly...

THIS IS INTERESTING I SHOULD BLOG ABOUT IT
And in general, how to fix <() in non interactive shells

---
Interesting:
http://shapeshed.com/command-line-utilities-with-nodejs/
How I will probably invoke bash, with environment:
http://stackoverflow.com/questions/7464036/node-js-shell-script-and-arguments
Using exec(), because it lets you just do one string for process invokation.

But, I'm pretty sure I want the full bash environment.

Excellent example of how to execure a shell script with node.js:
http://www.dzone.com/snippets/execute-unix-command-nodejs


---

FFMPEG metadata:
http://www.benfarrell.com/2012/07/23/injecting-metadata-with-ffmpeg-and-node-js/
^ This worked!

This appeared to have worked, however, VLC barfed:
ffmpeg -i 2015-06-18_thedailyshow_malala-yousafzai.mp4 -y -metadata title="title" -metadata description="This is an episode of the daily show" -c copy 2015-06-18_thedailyshow_malala-yousafzai.mp4

Here is a table of properties:
http://wiki.multimedia.cx/index.php?title=FFmpeg_Metadata

Maybe try it without description?

Or try it on a different mpeg file?

ffmpeg -i 2015-06-17_thedailyshow_bill-clinton.mp4 -y -metadata title="title" -metadata description="This is an episode of the daily show" -c copy 2015-06-17_thedailyshow_bill-clinton.mp4

FUCK!
ffmpeg truncated the files!
Should have been more careful.
I guess it can't handle larger files.
It would make sense that it would work with smaller mp3 files.

Awesome!
Almost done, but a few issues.

Need to addslashes or something, so that ffmpeg doesn't barf when getting input:
http://stackoverflow.com/questions/2195568/how-do-i-add-slashes-to-a-string-in-javascript

str = str.replace(/'/g, "\\'");

That's probably what I need.
Also, iTunes doesn't accept year metadata.

Why year no work?
for f in ./20150616_*.mp4; do echo "file '$PWD/$f'"; done | ffmpeg -f concat -i - -c copy  -metadata title="thedailyshow June 16, 2015 - Aziz Ansari" -metadata year="2015" -metadata date="2015" -metadata show="The Daily Show" -metadata genre="Comedy" 2015-06-16_thedailyshow_aziz-ansari.mp4


OK, awesome!
Works.

Going to delete some crap now.
Storing some of my notes in other files.

// References:

// This looks very helpful for how to save video files using pipe stream etc.
// http://stackoverflow.com/questions/28016289/saving-video-files-using-node-youtube-dl-with-meteorjs

// Goal: Use pipe and stream. That is best way.

// https://ricochen.wordpress.com/2010/04/24/javascript-zero-padding-numbers/
// How to do month as always two digits with left zero padded:
// new String('0' + upload_date.getMonth()).slice(-2)

// http://blog.donaldderek.com/tag/youtube-dl/
// http://pauldbergeron.com/articles/streaming-youtube-to-mp3-audio-in-nodejs.html
// http://stackoverflow.com/questions/18168432/node-js-how-to-pipe-youtube-to-mp4-to-mp3
// 

// FFMPEG
//http://stackoverflow.com/questions/19154807/merging-two-video-streams-and-saving-as-one-file

// Some testing examples
/*
 http://thedailyshow.cc.com/full-episodes/okco56/may-13--2015---reza-aslan
 http://thedailyshow.cc.com/full-episodes/slnsr3/may-12--2015---tom-brokaw
 http://thedailyshow.cc.com/full-episodes/f2nr6x/may-11--2015---john-legend
 
 http://thedailyshow.cc.com/episodes/rvkbud/june-2--2015---bill-de-blasio

 http://thedailyshow.cc.com/episodes/l77wjf/june-1--2015---stanley-mcchrystal
*/


Some git stuff:
https://help.github.com/articles/importing-your-project-to-github/
https://help.github.com/articles/adding-a-remote/
https://help.github.com/articles/importing-a-git-repository-using-the-command-line/

---
Formats:
rtmp-1300
rtmp-250
rtmp-450
rtmp-800
rtmp-1700
rtmp-2200
rtmp-3500
vhttp-1300
vhttp-250
vhttp-450
vhttp-800
vhttp-1700
vhttp-2200
vhttp-3500

